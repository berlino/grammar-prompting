list : "(" expression ")" 
    | "(" expression expression ")" 
    | "(" expression expression expression ")" 
    | "(" expression expression expression expression ")" 
expression : atom | list

string: ESCAPED_STRING
number: NUMBER | NUMBER "L"

typed_atom: type expression
atom: symbol | string | number | typed_atom

%import common.NUMBER
%import common.ESCAPED_STRING
%import common.WS
%ignore WS

symbol : TIME | PERIOD_DURATION | SEASON | DATE | YEAR | DAY | WEEK | HOLIDAY | MONTH | EVENT | OP | CONSTRAINT | PERSON | ATTENDEE | STATUS | WEATHER | QUANTITY | PLACE | GENERAL

TIME : "Later"
	| "Evening"
	| "Late"
	| "Now"
	| "Midnight"
	| "NumberPM"
	| "LateMorning"
	| "HourMinuteAm"
	| "TimeToTime"
	| "Night"
	| "Noon"
	| "Dinner"
	| "Early"
	| "Morning"
	| "Lunch"
    | "TimeBeforeDateTime"
	| "TimeAfterDateTime"
	| "TimeAround"
	| "Breakfast"
	| "Brunch"
	| "NumberAM"
	| "LateAfternoon"
	| "Afternoon"
	| "NextTime"
	| "toHours"
	| "toMinutes"
	| "HourMinutePm"
	| "OnDateBeforeTime"
	| "LateTimeRange"
	| "EarlyTimeRange"
	| "HourMinuteMilitary"
	| "HourMilitary"


PERIOD_DURATION: "NextPeriod"
	| "addPeriods"
	| "adjustByPeriod"
	| "PeriodBeforeDate"
    | ":duration"
	| "adjustByDuration"
	| "addDurations"
	| "PeriodDuration.apply"
	| "adjustByPeriodDuration"
	| "PeriodDurationBeforeDateTime"

SEASON: "SeasonWinter"
	| "SeasonSpring"
	| "SeasonFall"
	| "SeasonSummer"

DATE: "Date.month"
	| "Date.year"
	| "DateTime.time"
	| "DateTime.date"
	| "DateTime.date_?"
	| "Date.dayOfWeek_?"
	| "Date.dayOfWeek"
	| "OnDateAfterTime"
	| "DateTime.time_?"
	| "GreaterThanFromStructDateTime"
	| "LessThanFromStructDateTime"
	| "LateDateRange"
	| "AroundDateTime"
	| "DateAtTimeWithDefaults"
	| "EarlyDateRange"
	| "MDY"
	| "MD"

YEAR: "FullYearofYear"
	| "LastYear"
	| "NextYear"
	| "Year.apply"
	| "toFourDigitYear"
    | "toYears"

DAY: "Wednesday"
	| "Weekdays"
	| "Sunday"
    | "Monday"
	| "Yesterday"
	| "Today"
	| "Tomorrow"
	| "Tuesday"
	| "Friday"
	| "Saturday"
	| "Weekend"
	| "ClosestDayOfWeek"
	| "LastDayOfMonth"
	| "WeekendOfMonth"
	| "previousDayOfMonth"
	| "LastWeekendOfMonth"
	| "Thursday"
	| "Day.apply"
	| "toWeeks"
	| "NextWeekend"
	| "previousDayOfWeek"
	| "toDays"
	| "previousMonthDay"
	| "WeekendOfDate"
	| "EndOfWorkDay"
	| "ClosestDay"
	| "nextDayOfWeek"
	| "ThisWeekend"
	| "nextDayOfMonth"
	| "DowOfWeekNew"
	| "DowToDowOfWeek"
	| "NextDOW"

WEEK: "NumberWeekOfMonth"
	| "NumberWeekFromEndOfMonth"
	| "WeekOfDateNew"
	| "NextWeekList"
	| "ThisWeek"
	| "LastWeekNew"

HOLIDAY: "Holiday.TaxDay"
	| "Holiday.StPatricksDay"
	| "NextHolidayFromToday"
	| "Holiday.ValentinesDay"
	| "Holiday.EarthDay"
	| "Holiday.MothersDay"
	| "Holiday.LaborDay"
	| "Holiday.Thanksgiving"
	| "Holiday.Halloween"
	| "Holiday.NewYearsEve"
	| "Holiday.NewYearsDay"
	| "Holiday.FathersDay"
	| "Holiday.IndependenceDay"
	| "Holiday.AprilFoolsDay"
	| "Holiday.MemorialDay"
	| "Holiday.Easter"
	| "nextMonthDay"
	| "previousHoliday"
	| "nextHoliday"
	| "HolidayYear"

MONTH: "June"
	| "October"
	| "July"
	| "March"
	| "April"
	| "May"
	| "November"
	| "September"
	| "NextMonth"
	| "toMonths"
	| "August"
	| "February"
	| "December"
	| "January"
	| "toMonth"
	| "FullMonthofLastMonth"
	| "FullMonthofMonth"
	| "FullMonthofPreviousMonth"

EVENT: "Event.end_?"
	| "CreatePreflightEventWrapper"
	| "FindEventWrapperWithDefaults"
	| "Event.start_?"
	| "EventOnDateBeforeTime"
	| "QueryEventResponse.results"
	| "Event.attendees_?"
	| "Event.showAs_?"
	| "Event.start"
	| "FindLastEvent"
	| "EventForRestOfToday"
	| "CreateCommitEventWrapper"
	| "EventAtTime"
	| "Event.isAllDay_?"
	| "EventOnDate"
	| "EventAfterDateTime"
	| "EventDuringRangeTime"
	| "Event.end"
	| "Event.isOneOnOne_?"
	| "Event.subject_?"
	| "EventOnDateTime"
	| "Event.location_?"
	| "EventAllDayOnDate"
	| "EventOnDateAfterTime"
	| "Event.duration_?"
	| "EventOnDateWithTimeRange"
	| "Event.location"
	| "EventDuringRange"
	| "FindNumNextEvent"
	| "EventAllDayStartingDateForPeriod"
	| "EventBeforeDateTime"
    | "EventAllDayForDateRange"

OP: "?<="
	| "?>"
	| "?<"
	| ">"
	| "+"
	| "?>="
	| "?="
	| "=="
	| "&"
	| "?~="
	| "negate"

CONSTRAINT: "orConstraint"
	| "extensionConstraint"
	| "EmptyStructConstraint"
	| "DateTimeAndConstraint"
	| "DateTimeFromDowConstraint"
	| "ActionIntensionConstraint"
	| "RecipientFromRecipientConstraint"
	| "AttendeeListHasRecipientConstraint"
	| "DateTimeConstraint"
	| "DateAndConstraint"

PERSON: "PersonName.apply"
	| "FindTeamOf"
	| "FindManager"
	| "CurrentUser"
	| "FindReports"
	| "Person.phoneNumber"
	| "PersonFromRecipient"
	| "PersonOnTeam"
	| "Person.emailAddress"
	| "toRecipient"
	| "RecipientWithNameLike"

ATTENDEE: "AttendeeListHasPeople"
    | "AttendeeType.Required"
	| "AttendeeListHasRecipient"
	| "AttendeeListHasRecipientWithType"
	| "AttendeeType.Optional"
	| "AttendeeListExcludesRecipient"

STATUS: "ShowAsStatus.Tentative"
	| "ShowAsStatus.Unknown"
	| "ShowAsStatus.OutOfOffice"
	| "ShowAsStatus.WorkingElsewhere"
	| "ShowAsStatus.Busy"
	| "ShowAsStatus.Free"

WEATHER: "WeatherQuantifier.Summarize"
	| "WeatherQueryApi"
	| "temperature"
	| "WeatherAggregate"
	| "WillRain"
	| "IsCold"


PLACE: "Here"
	| "AtPlace"
	| "FindPlace"
	| "roomRequest"
	| "LocationKeyphrase.apply"

MISC: "Execute"
	| "Yield"
	| "do"
	| "refer"
	| "size"
	| "Acouple"
	| "longToNum"
	| "singleton"
	| "true"
	| "Afew"
	| "Path.apply"
 
type : TYPE
TYPE : "^(Dynamic)"
	| "^(Recipient)"
	| "^(Event)"
	| "^(Date)"
